using Newtonsoft.Json;

namespace GrokSharp.Models
{
    /// <summary>
    /// Represents a chat completion response from the xAI Grok API.
    /// </summary>
    public class ChatResponse
    {
        /// <summary>
        /// Gets or sets the unique identifier for the chat completion.
        /// </summary>
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the type of object, typically "chat.completion".
        /// </summary>
        public string Object { get; set; }

        /// <summary>
        /// Gets or sets the Unix timestamp (in seconds) when the response was created.
        /// </summary>
        public long Created { get; set; }

        /// <summary>
        /// Gets or sets the model used to generate the response, e.g., "grok-2-latest".
        /// </summary>
        public string Model { get; set; }

        /// <summary>
        /// Gets or sets the list of response choices generated by the model.
        /// </summary>
        public List<GrokChoice> Choices { get; set; }

        /// <summary>
        /// Gets or sets the token usage statistics for the request and response.
        /// </summary>
        public GrokUsage Usage { get; set; }

        /// <summary>
        /// Gets or sets a unique identifier for the system configuration used in the response.
        /// </summary>
        [JsonProperty("system_fingerprint")]
        public string SystemFingerprint { get; set; }
    }

    /// <summary>
    /// Represents a single choice in a chat completion response.
    /// </summary>
    public class GrokChoice
    {
        /// <summary>
        /// Gets or sets the index of this choice in the list of choices (0-based).
        /// </summary>
        public int Index { get; set; }

        /// <summary>
        /// Gets or sets the message content generated by the model.
        /// </summary>
        public ResponseMessage Message { get; set; }

        /// <summary>
        /// Gets or sets the reason why the response generation stopped, e.g., "stop".
        /// </summary>
        [JsonProperty("finish_reason")]
        public string FinishReason { get; set; }
    }

    /// <summary>
    /// Represents token usage statistics for a chat completion.
    /// </summary>
    public class GrokUsage
    {
        /// <summary>
        /// Gets or sets the number of tokens in the prompt.
        /// </summary>
        [JsonProperty("prompt_tokens")]
        public int PromptTokens { get; set; }

        /// <summary>
        /// Gets or sets the number of tokens in the completion.
        /// </summary>
        [JsonProperty("completion_tokens")]
        public int CompletionTokens { get; set; }

        /// <summary>
        /// Gets or sets the total number of tokens (prompt + completion).
        /// </summary>
        [JsonProperty("total_tokens")]
        public int TotalTokens { get; set; }

        /// <summary>
        /// Gets or sets detailed breakdown of prompt token usage.
        /// </summary>
        [JsonProperty("prompt_tokens_details")]
        public GrokPromptTokenDetails PromptTokensDetails { get; set; }
    }

    /// <summary>
    /// Represents a detailed breakdown of prompt token usage.
    /// </summary>
    public class GrokPromptTokenDetails
    {
        /// <summary>
        /// Gets or sets the number of text tokens in the prompt.
        /// </summary>
        [JsonProperty("text_tokens")]
        public int TextTokens { get; set; }

        /// <summary>
        /// Gets or sets the number of audio tokens in the prompt (if applicable).
        /// </summary>
        [JsonProperty("audio_tokens")]
        public int AudioTokens { get; set; }

        /// <summary>
        /// Gets or sets the number of image tokens in the prompt (if applicable).
        /// </summary>
        [JsonProperty("image_tokens")]
        public int ImageTokens { get; set; }

        /// <summary>
        /// Gets or sets the number of cached tokens reused in the prompt.
        /// </summary>
        [JsonProperty("cached_tokens")]
        public int CachedTokens { get; set; }
    }
}
